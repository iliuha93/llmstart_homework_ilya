import logging
from openai import AsyncOpenAI
from config import OPENROUTER_API_KEY, MODEL_NAME, LLM_TEMPERATURE, LLM_MAX_TOKENS

logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è API –∫–ª—é—á–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if not OPENROUTER_API_KEY:
    logger.error("OPENROUTER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ OpenRouter
client = AsyncOpenAI(
    api_key=OPENROUTER_API_KEY,
    base_url="https://openrouter.ai/api/v1"
)

async def get_llm_response(dialog_history: list) -> str:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç LLM —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
    """
    try:
        logger.info(f"üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ LLM:")
        logger.info(f"  - –°–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏: {len(dialog_history)}")
        logger.info(f"  - –ú–æ–¥–µ–ª—å: {MODEL_NAME}")
        logger.info(f"  - –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {LLM_TEMPERATURE}")
        logger.info(f"  - –ú–∞–∫—Å —Ç–æ–∫–µ–Ω—ã: {LLM_MAX_TOKENS}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
        if not OPENROUTER_API_KEY:
            raise ValueError("OpenRouter API –∫–ª—é—á –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            
        response = await client.chat.completions.create(
            model=MODEL_NAME,
            messages=dialog_history,
            temperature=LLM_TEMPERATURE,
            max_tokens=LLM_MAX_TOKENS
        )
        
        answer = response.choices[0].message.content
        logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç LLM: {len(answer)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        return answer
        
    except Exception as e:
        error_type = type(e).__name__
        error_msg = str(e)
        
        logger.error(f"‚ùå –û–®–ò–ë–ö–ê LLM: {error_type}")
        logger.error(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {error_msg}")
        logger.error(f"   –ú–æ–¥–µ–ª—å: {MODEL_NAME}")
        logger.error(f"   API –∫–ª—é—á —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {bool(OPENROUTER_API_KEY)}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é –æ—à–∏–±–∫—É –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        return f"–û—à–∏–±–∫–∞ {error_type}: {error_msg}" 