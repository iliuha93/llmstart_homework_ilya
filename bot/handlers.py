import logging
from aiogram import Router
from aiogram.types import Message
from llm.client import get_llm_response
from config import SYSTEM_PROMPT

logger = logging.getLogger(__name__)
router = Router()

# –•—Ä–∞–Ω–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–æ–≤ –≤ –ø–∞–º—è—Ç–∏
dialogs = {}

@router.message()
async def llm_handler(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π LLM"""
    chat_id = str(message.chat.id)
    user_message = message.text
    
    logger.info(f"üì® –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chat_id}: {user_message[:50]}...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if chat_id not in dialogs:
        dialogs[chat_id] = {
            "messages": [
                {"role": "system", "content": SYSTEM_PROMPT}
            ]
        }
        logger.info(f"üÜï –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è {chat_id}")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    dialogs[chat_id]["messages"].append({
        "role": "user", 
        "content": user_message
    })
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç LLM
    llm_response = await get_llm_response(dialogs[chat_id]["messages"])
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –≤ –∏—Å—Ç–æ—Ä–∏—é
    dialogs[chat_id]["messages"].append({
        "role": "assistant",
        "content": llm_response
    })
    
    logger.info(f"üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await message.answer(llm_response) 